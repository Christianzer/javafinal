create or replace procedure insertCand
    (photo in CANDIDATS.PHOTO_CANDIDAT%TYPE,nom in CANDIDATS.NOM_CANDIDAT%TYPE,
    prenoms in CANDIDATS.PRENOM_CANDIDAT%TYPE,dateC in CANDIDATS.DATE_NAISS_CANDIDAT%TYPE,
     lieu in CANDIDATS.LIEU_NAIS_CANDIDAT%TYPE,nationalite in CANDIDATS.NATIONALITE_CANDIDAT%TYPE,
     contact in CANDIDATS.CONTACT_CANDIDAT%TYPE,mail in CANDIDATS.MAIL_CANDIDAT%TYPE)
     is
begin
    insert into CANDIDATS(PHOTO_CANDIDAT, NOM_CANDIDAT,
                          PRENOM_CANDIDAT, DATE_NAISS_CANDIDAT,
                          LIEU_NAIS_CANDIDAT, NATIONALITE_CANDIDAT, CONTACT_CANDIDAT,
                          MAIL_CANDIDAT)
                          VALUES (photo,nom,prenoms,dateC,lieu,nationalite,contact,mail);
end;
/

create or replace procedure insertPiece(piecesCand in avoir_pieces.pieces%type
,cand in avoir_pieces.ID_CAND%type,numero in avoir_pieces.NUM_PI%type,
image in avoir_pieces.IMG_PI%type)
is
begin
    insert into AVOIR_PIECES(PIECES, ID_CAND, NUM_PI, IMG_PI) values (piecesCand,cand,numero,image);
end;
/

create or replace procedure insertdiplome
(diplomesCand in avoir_diplomes.diplomes%type,cand in avoir_diplomes.id_cand%type,
numero in avoir_diplomes.num_dip%type,image in avoir_diplomes.num_dip%type)
is
begin
    insert into AVOIR_DIPLOMES(DIPLOMES, ID_CAND, NUM_DIP, IMG_DIP) VALUES (diplomesCand,cand,numero,image);
end;
/

create or replace procedure insertplant(lieu in plantation_candidats.localisation_plantation%type,super in plantation_candidats.superficie_plantation%type, imagecer in plantation_candidats.certificat_propriete%type)
is
begin
    insert into PLANTATION_CANDIDATS(LOCALISATION_PLANTATION, SUPERFICIE_PLANTATION, CERTIFICAT_PROPRIETE)
    VALUES (lieu,super,imagecer);
end;
/

create or replace procedure insertculture(plantid in avoir_cultures.id_plant%type,typeid in avoir_cultures.id_type_cult%type)
is
begin
    insert into AVOIR_CULTURES(ID_PLANT, ID_TYPE_CULT) values (plantid,typeid);
end;
/

create or replace procedure insertmethode(plantid in avoir_methodes.id_plant%type,methodeid in avoir_methodes.id_methode%type)
is
begin
    insert into AVOIR_METHODES(ID_PLANT, ID_METHODE) values (plantid,methodeid);
end;
/

create or replace procedure insertemploye(nbreemploye in employe_candidats.nombre_employe%type,nbrefem in employe_candidats.nombre_femme%type
,salaire in employe_candidats.salaire_moyen%type,mineurs in employe_candidats.mineur%type,certificat in employe_candidats.certificat_employe%type)
is
begin
    insert into EMPLOYE_CANDIDATS(NOMBRE_EMPLOYE, NOMBRE_FEMME, SALAIRE_MOYEN, MINEUR,CERTIFICAT_EMPLOYE)
    values (nbreemploye,nbrefem,salaire,mineurs,certificat);
end;
/

create or replace procedure insertdossierins(identifiant in dossier_inscriptions.identifiant_candidat%type
,mdp in dossier_inscriptions.mot_de_passe%type,plantid in dossier_inscriptions.id_plant%type,
candid in dossier_inscriptions.id_cand%type,emplcand in dossier_inscriptions.id_empl_cand%type
,dateins in dossier_inscriptions.date_inscription%type)
is
begin
    insert into DOSSIER_INSCRIPTIONS(IDENTIFIANT_CANDIDAT, MOT_DE_PASSE, ID_PLANT, ID_CAND, ID_EMPL_CAND, DATE_INSCRIPTION)
    values (identifiant,mdp,plantid,candid,emplcand,dateins);
end;
/

create or replace procedure validation(etatdoc in dossier_inscriptions.validation%type,dossierid in dossier_inscriptions.dossier%type)
is
begin
    update DOSSIER_INSCRIPTIONS SET VALIDATION = etatdoc WHERE DOSSIER=dossierid;
    if(etatdoc = 2) THEN
        insert into DOSSIERPRIS(DOSSIER) values (dossierid);
    end if;
end;
/

create or replace procedure rendezvous(dossierid in dossierpris.dossier%type,daterendezvous in dossierpris.date_rendez_vous%type)
is
   cursor curs is select IDENTIFIANT_JURY from JURY;
        identifiant jury.identifiant_jury%type ;
begin
    update DOSSIERPRIS SET DATE_RENDEZ_VOUS = daterendezvous WHERE DOSSIER = dossierid;
    open curs;
    loop
        fetch curs into identifiant;
        exit when(curs%notfound);
        insert into VISITE (IDENTIFIANT_JURY,DOSSIER) VALUES (identifiant,dossierid);
    end loop;
    close curs;
end;
/
